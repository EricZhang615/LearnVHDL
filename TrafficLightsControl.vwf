/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 45.0s\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 45000000000.0;
	SIMULATION_TIME = 45000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("rst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CS[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CS";
}

SIGNAL("CS[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CS";
}

SIGNAL("CS[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CS";
}

SIGNAL("CS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CS";
}

SIGNAL("CS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CS";
}

SIGNAL("CS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CS";
}

SIGNAL("TS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TS";
}

SIGNAL("TS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TS";
}

SIGNAL("TS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "TS";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 45000;
			LEVEL 0 FOR 500000.0;
			LEVEL 1 FOR 500000.0;
		}
	}
}

TRANSITION_LIST("rst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16357785600.0;
		LEVEL 1 FOR 209715200.0;
		LEVEL 0 FOR 28432499200.0;
	}
}

TRANSITION_LIST("CS[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16357785611.006;
		LEVEL 1 FOR 3209714405.115;
		LEVEL 0 FOR 25432499983.879;
	}
}

TRANSITION_LIST("CS[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15999500015.45;
		LEVEL 1 FOR 358285594.885;
		LEVEL 0 FOR 19209714405.115;
		LEVEL 1 FOR 9432499984.55;
	}
}

TRANSITION_LIST("CS[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7999500016.605;
		LEVEL 1 FOR 8000000000.0;
		LEVEL 0 FOR 358285594.885;
		LEVEL 1 FOR 3209714405.115;
		LEVEL 0 FOR 8000000000.0;
		LEVEL 1 FOR 8000000000.0;
		LEVEL 0 FOR 8000000000.0;
		LEVEL 1 FOR 1432499983.395;
	}
}

TRANSITION_LIST("CS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3999500015.397;
		LEVEL 1 FOR 4000000000.0;
		LEVEL 0 FOR 4000000000.0;
		LEVEL 1 FOR 4000000000.0;
		LEVEL 0 FOR 7568000000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4000000000.0;
			LEVEL 0 FOR 4000000000.0;
		}
		LEVEL 1 FOR 4000000000.0;
		LEVEL 0 FOR 1432499984.603;
	}
}

TRANSITION_LIST("CS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1999500015.607;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 2000000000.0;
			LEVEL 0 FOR 2000000000.0;
		}
		LEVEL 1 FOR 2000000000.0;
		LEVEL 0 FOR 2568000000.0;
		LEVEL 1 FOR 1000000000.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 2000000000.0;
			LEVEL 1 FOR 2000000000.0;
		}
		LEVEL 0 FOR 1432499984.393;
	}
}

TRANSITION_LIST("CS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 999500016.129;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 1000000000.0;
			LEVEL 0 FOR 1000000000.0;
		}
		LEVEL 1 FOR 1000000000.0;
		LEVEL 0 FOR 1568000000.0;
		LEVEL 1 FOR 1000000000.0;
		LEVEL 0 FOR 2000000000.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 1000000000.0;
			LEVEL 0 FOR 1000000000.0;
		}
		LEVEL 1 FOR 432499983.871;
	}
}

TRANSITION_LIST("TS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16357785612.504;
		LEVEL 1 FOR 3209714404.741;
		LEVEL 0 FOR 25432499982.755;
	}
}

TRANSITION_LIST("TS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15999500017.565;
		LEVEL 1 FOR 0.212;
		LEVEL 0 FOR 358285594.34;
		LEVEL 1 FOR 0.545;
		LEVEL 0 FOR 19209714404.903;
		LEVEL 1 FOR 0.212;
		LEVEL 0 FOR 3999999999.083;
		LEVEL 1 FOR 4000000000.0;
		LEVEL 0 FOR 0.917;
		LEVEL 1 FOR 1432499982.223;
	}
}

TRANSITION_LIST("TS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7999500017.384;
		LEVEL 1 FOR 0.368;
		LEVEL 0 FOR 7000000000.186;
		LEVEL 1 FOR 999999999.246;
		LEVEL 0 FOR 0.754;
		LEVEL 1 FOR 358285594.131;
		LEVEL 0 FOR 11209714405.315;
		LEVEL 1 FOR 0.368;
		LEVEL 0 FOR 7000000000.186;
		LEVEL 1 FOR 999999999.246;
		LEVEL 0 FOR 0.754;
		LEVEL 1 FOR 3999999999.814;
		LEVEL 0 FOR 5432499982.248;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "rst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "CS[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "CS[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "CS[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "CS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "CS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "CS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "TS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "TS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "TS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "TS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

TIME_BAR
{
	TIME = 20125;
	MASTER = TRUE;
}
;
